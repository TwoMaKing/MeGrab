<?xml version="1.0"?>
<configuration>

  <configSections>

    <section name="EApp" type="Eagle.Core.Configuration.EAppConfigurationSection, Eagle.Core" />

    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />

  </configSections>

  <connectionStrings>
    <clear />
    <remove name="MeGrabAccountMySQL" />
    <add name="MeGrabAccountMySQL"
         connectionString="port=3306;server=localhost;user id=root;password=change_198118;database=megrabaccount"
         providerName="MySql.Data.MySqlClient" />
  </connectionStrings>

  <EApp>

    <application provider="Eagle.Core.Application.App, Eagle.Core" />

    <objectContainer provider="Eagle.Core.IoC.UnityObjectContainerFactory, Eagle.Core" initFromConfigFile="true" sectionName="unity"/>

    <serializationFormats default="Json">
      <format name="XML" type="Eagle.Common.Serialization.ObjectXmlSerializer, Eagle.Common" />
      <format name="Json" type="Eagle.Common.Serialization.ObjectJsonSerializer, Eagle.Common" />
    </serializationFormats>

    <cacheManagers default="Redis">
      <cacheManager name="Redis" type="Eagle.Web.Caches.RedisProvider, Eagle.Web.Caches" />
      <cacheManager name="Memcached" type="Eagle.Web.Caches.MemcachedProvider, Eagle.Web.Caches" />
    </cacheManagers>

    <redis writeHosts="127.0.0.1:6379" readOnlyHosts="127.0.0.1:6379" maxWritePoolSize="60" maxReadPoolSize="60"
           autoStart="true" timeOutSeconds="3600"></redis>
  </EApp>

  <unity>
    <container>

      <register type="Eagle.Web.Caches.ICacheManager, Eagle.Web.Caches" mapTo="Eagle.Web.Caches.DefaultCacheManager, Eagle.Web.Caches">
        <lifetime type="external" />
      </register>

      <register type="Eagle.Domain.Repositories.IRepositoryContext, Eagle.Domain" mapTo="Eagle.Repositories.Dapper.DapperRepositoryContext, Eagle.Repositories.Dapper">
        <lifetime type="external" />
      </register>

      <register type="MeGrab.Domain.Repositories.IMeGrabUserSqlRepository, MeGrab.Domain" mapTo="MeGrab.Domain.Repositories.Sql.MeGrabUserRepository, MeGrab.Domain.Repositories"></register>

      <register type="MeGrab.Domain.Repositories.IRedPacketGrabActivitySqlRepository, MeGrab.Domain" mapTo="MeGrab.Domain.Repositories.Sql.RedPacketGrabActivityRepository, MeGrab.Domain.Repositories"></register>

      <register type="MeGrab.ServiceContracts.IMeGrabUserService, MeGrab.ServiceContracts" mapTo="MeGrab.Application.MeGrabUserServiceImpl, MeGrab.Application"></register>

      <register type="MeGrab.ServiceContracts.IRedPacketDispatchService, MeGrab.ServiceContracts" mapTo="MeGrab.Application.RedPacketDispatchServiceImpl, MeGrab.Application"></register>

      <register type="MeGrab.ServiceContracts.IRedPacketGrabActivityQueryService, MeGrab.ServiceContracts" mapTo="MeGrab.Application.RedPacketGrabActivityQueryServiceImpl, MeGrab.Application"></register>

      <register type="Eagle.Domain.Events.IDomainEventHandler`2[[MeGrab.Domain.Events.RedPacketGrabActivityEvent, MeGrab.Domain],[System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Eagle.Domain"
                mapTo="MeGrab.Domain.Events.Handlers.RedPacketGrabActivityMQStoringEventHandler, MeGrab.Domain" name="RedPacketGrabActivityMQStoringEventHandler">
      </register>

      <register type="Eagle.Domain.Events.IDomainEventHandler`2[[MeGrab.Domain.Events.RedPacketGrabActivityEvent, MeGrab.Domain],[System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Eagle.Domain"
                mapTo="MeGrab.Domain.Events.Handlers.RedPacketGrabActivityCachingEventHandler, MeGrab.Domain" name="RedPacketGrabActivityCachingEventHandler">
      </register>

    </container>
  </unity>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  
  <system.serviceModel>
    
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint crossDomainScriptAccessEnabled="true" />
      </webHttpEndpoint>
    </standardEndpoints>
    
    <bindings>
      
      <webHttpBinding>
        <binding name="restfulBinding" crossDomainScriptAccessEnabled ="true" receiveTimeout="0:10:00" sendTimeout="00:10:00"/>
      </webHttpBinding>

      <wsHttpBinding>
        <binding name="commonBinding" receiveTimeout="01:00:00" sendTimeout="01:00:00">
          <security mode="Message">
            <message clientCredentialType="UserName"/>
          </security>
        </binding>
      </wsHttpBinding>
      
    </bindings>
    
    <services>
      <service name="MeGrab.Services.RedPacketGabActivityQueryService" behaviorConfiguration="restfulQueryServiceBehavior">
        <endpoint kind="webHttpEndpoint" binding="webHttpBinding" behaviorConfiguration="restfulBehavior" 
                  bindingConfiguration="restfulBinding" contract="MeGrab.ServiceContracts.IRedPacketGrabActivityQueryService"/>
      </service>
    </services>

    <behaviors>
      <endpointBehaviors>
        <behavior name="restfulBehavior">
          <webHttp helpEnabled="true" defaultOutgoingResponseFormat="Json"/>
        </behavior>
        <!--<behavior>
          <enableWebScript />
        </behavior>-->
      </endpointBehaviors>

      <serviceBehaviors>
        
        <behavior name="restfulQueryServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        
        <behavior name="commonQueryServiceBehavior">
          <serviceMetadata httpGetEnabled="false" />
          <!--<serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType=""/>
          </serviceCredentials>-->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        
      </serviceBehaviors>

    </behaviors>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true"/>
    
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
